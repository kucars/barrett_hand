/* Auto-generated by genmsg_cpp for file /home/kuri/catkin_ws/src/owd_msgs/srv/WamRequestSeaCtrlKi.srv */
#ifndef OWD_MSGS_SERVICE_WAMREQUESTSEACTRLKI_H
#define OWD_MSGS_SERVICE_WAMREQUESTSEACTRLKI_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace owd_msgs
{
template <class ContainerAllocator>
struct WamRequestSeaCtrlKiRequest_ {
  typedef WamRequestSeaCtrlKiRequest_<ContainerAllocator> Type;

  WamRequestSeaCtrlKiRequest_()
  {
  }

  WamRequestSeaCtrlKiRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct WamRequestSeaCtrlKiRequest
typedef  ::owd_msgs::WamRequestSeaCtrlKiRequest_<std::allocator<void> > WamRequestSeaCtrlKiRequest;

typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiRequest> WamRequestSeaCtrlKiRequestPtr;
typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiRequest const> WamRequestSeaCtrlKiRequestConstPtr;



template <class ContainerAllocator>
struct WamRequestSeaCtrlKiResponse_ {
  typedef WamRequestSeaCtrlKiResponse_<ContainerAllocator> Type;

  WamRequestSeaCtrlKiResponse_()
  {
  }

  WamRequestSeaCtrlKiResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct WamRequestSeaCtrlKiResponse
typedef  ::owd_msgs::WamRequestSeaCtrlKiResponse_<std::allocator<void> > WamRequestSeaCtrlKiResponse;

typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiResponse> WamRequestSeaCtrlKiResponsePtr;
typedef boost::shared_ptr< ::owd_msgs::WamRequestSeaCtrlKiResponse const> WamRequestSeaCtrlKiResponseConstPtr;


struct WamRequestSeaCtrlKi
{

typedef WamRequestSeaCtrlKiRequest Request;
typedef WamRequestSeaCtrlKiResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct WamRequestSeaCtrlKi
} // namespace owd_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd_msgs/WamRequestSeaCtrlKiRequest";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd_msgs/WamRequestSeaCtrlKiResponse";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct WamRequestSeaCtrlKiRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct WamRequestSeaCtrlKiResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<owd_msgs::WamRequestSeaCtrlKi> {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKi&) { return value(); } 
};

template<>
struct DataType<owd_msgs::WamRequestSeaCtrlKi> {
  static const char* value() 
  {
    return "owd_msgs/WamRequestSeaCtrlKi";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKi&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd_msgs/WamRequestSeaCtrlKi";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKiRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "owd_msgs/WamRequestSeaCtrlKi";
  }

  static const char* value(const owd_msgs::WamRequestSeaCtrlKiResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OWD_MSGS_SERVICE_WAMREQUESTSEACTRLKI_H

